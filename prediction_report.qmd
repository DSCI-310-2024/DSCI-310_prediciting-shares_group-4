---
title: Exploratory Data Analysis
author: Amar Gill, Anshnoor Kaur, Hanyu Dai, Yanxin Liang
jupyter: ir
format: 
    html:
        toc: true
        toc-depth: 2
    pdf:
        toc: true
        toc-depth: 2

execute:
  echo: false

engine: knitr

bibliography: references.bib
---

# Title
Predicting number of shares an article will get based on the number of links, images and videos in the article.

# Research Question
Can the number of images, links and videos in an article predict the number of shares on social media that the article will get?

## Introduction:

Social media platforms, such as Twitter, have transformed the way in which information is disseminated and consumed on a global scale. These digital arenas enable a vast online community to quickly share and consume personal thoughts and professional insights, threaded through a variety of media forms. With over 500 million active users, Twitter has become particularly noteworthy for pinpointing the workings of information exchange and the features of content that make it most popular @Ignacio.

In their research on user activity in Twitter, @Oh posit that human behavior in everyday life is driven by many factors, and is thus complex and multi-faceted. They uncover a useful lens for examining user activity in casual online environments, while @luo report that mobile technology which will exceed 12.3 billion devices by 2022, over 90% of which will be smartphones is increasingly prevalent. This underscores the increasing relevance of social media platforms in the everyday sharing and transmission of information.

This research is fundamentally concerned with discerning the determinants of article popularity, as captured by the number of times each article was shared, to bring to light the many factors that drive user engagement and content diffusion. Using a massive dataset of articles and associated measures over a period of two years from Mashable (@Dataset) to build models that could more accurately identify the traits that result in the visibility and engagement of content published to social media. By exploring the relationship between shared articles' characteristics and how popular they become, the hope is that this work may yield findings that offer guidance to both enterprise and solo publishers seeking to make their work more prevalent and persuasive in the digital enclave.


```{r}
#| vscode: {languageId: r}
# Assuming your kernel autoinstalled renv, uncomment the following code
# to install the rest of the packages
# renv::restore()
```


## Summary
 Our analysis aims to predict the number of shares an article published by Mashable over a period of two years will get based on the number of links, images and videos in the article using knn classification. 

## Methods and Results


### Boxplot of Shares
![Boxplot of the variable of interest.](figs/shares.png){#fig-shares-plot width=80%}

```{r}
share_summary <- read.csv('data/share_summary.csv')

```

The variable of interest, shares, has a median of `{r} share_summary["Median"]` and a mean of `{r} share_summary["Mean"]`. The distribution spread is quite large, with a standard deviation of `{r} share_summary["SD"]`. We will be using knn classification to determine whether an article will be popular. We will create a new variable called is_popular with two values 1 (popular) and 0 (unpopular)". An article is classified as popular if it has equal to or more than 1400 shares and unpopular if it has less than 1400 shares. The model aims to predict whether an article will be popular based on the number of links, images, and videos in it. The dataset is publicly available and has 61 attributes out of which we chose 4 including the three predictors and the variable of interest, shares, which refers to the number of shares of the article in social networks.


Since we will be performing classification, we split our data into a training and a testing set with a 60% proportion.

We start our preliminary data analysis process by examining the number of observations we have in the training set for each class.

```{r}
#| label: tbl-num_obs
#| tbl-cap: Class distribution of article popularity in training set
#| 
temp <- read.csv('data/num_obs_training.csv')
pop_percentage <- round((as.numeric(temp[2,'percentage'])), 1)
knitr::kable(temp)

```





According to @tbl-num_obs, We can see that our data is balanced and since we have close percentages of data in both popular and unpopular classes, with popular holding the majority at `{r} pop_percentage` %. 

Next, we visualize the distributions of our predictor variables: num_hrefs, num_imgs, and num_videos. We use is_popular as the fill argument.


::: {layout-ncol=2}
![Histogram of number of links in popular and non-Popular articles](figs/links.png){#fig-num_links}

![Histogram of number of images in popular and non-Popular articles](figs/images.png){#fig-num_images}

![Histogram of number of videos in popular and non-Popular articles](figs/videos.png){#fig-num_videos}

:::

Next, we start building our knn classification model and we build a tuning model for picking the best value of k. Then we perform cross-validation and create a workflow that calculate the metrics for each of the K values 1, 6, ..., 100 then make an accuracy vs k plot.

### Accuracy vs k plot
![Results from 5-fold cross validation to choose K. (Accuracy was used as the classification metric as K was varied.)](figs/best_k.png){#fig-best-k-plot width=80%}

The value of K that generates the highest accuracy is about 50, therefore we choose K = 50 and use that to build the model.We use a workflow to fit our model using our training set, predict the labels in our testing set, and incorporate the predictions as the new column .pred_class into the testing set.


We now look at the accuracy of the classifier using the testing set with the metrics function.

```{r}
#| label: tbl-accuracy
#| tbl-cap: Summary of KNN model accuracy across different K values with 5-fold cross-validation
temp2 <- read.csv('data/model_accuracy.csv')
model_accuracy <- round((temp2[".estimate"]*100),1)
knitr::kable(temp2)
```


According to @tbl-accuracy, the accuracy of the classifier isn't very high at `{r} model_accuracy`%. Below is the confusion matrix of the classifier model.

```{r}
#| label: tbl-conf_mat
#| tbl-cap: Confusion matrix of Aarticle popularity predictions on test data
conf_mat <- readRDS('src/objects/conf_mat.rds')
knitr::kable(conf_mat$table)

```


```{r}

conf_mat_summary <- read.csv('data/conf_mat_summary.csv')

```

Given that we care more about popular articles with higher shares, we take popular articles as the "positive" observations. So the true positive is `{r} conf_mat_summary["TP"]` and the false positive is `{r} conf_mat_summary["FP"]`. The precision is therefore `{r} conf_mat_summary["Precision"]`  which is slightly higher than the accuracy of `{r} conf_mat_summary["Accuracy"]`. The recall is `{r} conf_mat_summary["Recall"]` which is significantly lower than the accuracy. This suggests that the model is somewhat precise in predicting popular articles but is cautious and misses some actual instances of popular articles in doing so.

## Discussion:
Summary: Our analysis aims to predict the number of shares an article published by Mashable over a period of two years will get based on the number of links, images and videos in the article using knn classification. An article is classified as popular if it has equal to or more than 1400 shares and unpopular if it has less than 1400 shares. Our findings suggest that the model is only somwhat reliable with an accuracy of `{r} conf_mat_summary["Accuracy"]` with precision higher than accuracy but recall lower than accuracy.

Are the findings as expected:
Yes, this is what we expected. Given that a basic KNN  model was used for prediction, it's reasonable to assume that this simple model might be slightly underfitting. Consequently, we anticipate achieving improved outcomes by exploring more complex models.

Impact of Findings:
This insight has the potential to refine content creation strategies by enriching our comprehension of the elements that contribute to content's engagement and popularity, such as identifying the ideal balance of links, images, and videos within an article. Adopting this strategy could significantly boost the future articles' shareability.

Future Questions from Analysis:
This analysis might lead to several Future questions. Firstly, whether there are more model models capable of achieving higher precision and recall. Secondly, the impact of the quality of links, images, and videos within articles on their popularity presents another area for in-depth investigation. 

## References

